.breadcrumbsContainer {
  display: flex;
  align-items: center;
  display: flex;
  align-items: center;
  gap: 4px;
  flex: 1 0 0;
}

.breadcrumbsWrapper {
  display: flex;
  align-items: center;
  list-style: none;
  padding: 0;
  margin: 2;
  align-self: stretch;

  &.default {
    flex-wrap: wrap;
    overflow: wrap;
  }

  &.compact {
    max-width: 400px;
    overflow: hidden;
    flex-wrap: nowrap;
    text-overflow: ellipsis;
    min-width: 0;
  }

.breadcrumbItemLink {
  a {
    padding-top: 0px;
    padding-bottom: 0px;
  }
  &.default {
    padding-left: 4px;
    padding-right: 4px;
  }
  &.compact {
    padding-left: 2px;
    padding-right: 2px;
  }
}

.breadcrumbItemIcon {
  color: var(--px-color-icon-default);
  display: flex;
  align-items: center;
}

  .breadcrumbItem {
    display: flex;
    align-items: center;
    color: var(--color-text);
    flex-shrink: 0;
    white-space: nowrap;
    &:last-child {
      .breadcrumbItemIcon {
        display: none;
      }
    }
  }
}

.breadcrumbsWrapper .breadcrumbItem {
  flex-shrink: 0;         // Prevents shrinking for all items
  white-space: nowrap;    // Prevents wrapping for all items
}

.breadcrumbsWrapper .breadcrumbItem:last-child {
  min-width: 0;           // Allow flexbox to shrink below content size
  white-space: normal;    // Allow wrapping for last item
  flex-shrink: 1;         // Allow last item to shrink and wrap // styles for default state
}

.breadcrumbsWrapper.compact .breadcrumbItem:last-child {
  flex-shrink: 0;
}

.breadcrumbsWrapper .breadcrumbItem:last-child a {
   text-decoration: none ;
   white-space: normal;
   word-break: break-word;
   overflow-wrap: anywhere;
}

.breadcrumbsContainercompact.showMore {
  max-width: none;
  flex-wrap: wrap;
  overflow-x: visible;
  align-items: center;
  flex-wrap: wrap;
}

.breadcrumbsWrapper.compact.showMore {
  flex-wrap: wrap;
  overflow-x: visible;
  align-items: center;
}

.breadcrumbsWrapper.compact.showMore .breadcrumbItem:last-child {
  flex-shrink: 1;
}

.showMoreButton {
  align-self: flex-end;
  &:hover {
    background-color: inherit !important;
  }
  &:active {
    color: var(--px-color-text-on-action-subtle) !important;
  }
}
