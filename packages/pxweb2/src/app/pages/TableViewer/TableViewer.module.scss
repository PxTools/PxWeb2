@use '$ui/style-dictionary/dist/scss/fixed-variables.scss' as fixed;
@use '$ui/src/lib/breakpoints.scss' as breakpoints;

// Not from Figma
.navigationAndContentContainer {
  display: flex;
  flex-direction: row;

  // Tablet and mobile sizes
  @media (breakpoints.$xsmall) or (breakpoints.$small) or (breakpoints.$medium) {
    flex-direction: column;
    overflow-y: auto;
  }
}

.mainContainer {
  --skip-to-main-content-height: 48px;

  display: flex;
  background: var(--px-color-surface-subtle);

  // Calculate height of main container, minus the header
  height: calc(100vh - fixed.$spacing-20);

  // xsmall, small and medium general settings
  @media (breakpoints.$xsmall) or (breakpoints.$small) or (breakpoints.$medium) {
    background: var(--px-color-surface-default);
    width: 100%;
  }

  // height calculations
  @media (breakpoints.$xsmall) or (breakpoints.$small) {
    // Calculate height of main container, minus the header and navigation bar heights
    height: calc(100vh - fixed.$spacing-19 - 78px);

    &.skipToMainContentVisible {
      // Calculate height of main container, minus the header and navigation bar and SkipToMainContent heights
      height: calc(
        100vh - fixed.$spacing-19 -
          fixed.$spacing-20 - var(--skip-to-main-content-height)
      );
    }
  }
  @media (breakpoints.$medium) {
    // Calculate height of main container, minus the header and navigation bar heights
    height: calc(100vh - fixed.$spacing-20 - 78px);

    &.skipToMainContentVisible {
      // Calculate height of main container, minus the header and navigation bar and SkipToMainContent heights
      height: calc(
        100vh - fixed.$spacing-20 -
          fixed.$spacing-20 - var(--skip-to-main-content-height)
      );
    }
  }

  // large, xlarge and xxlarge
  @media (breakpoints.$large) or (breakpoints.$xlarge) or (breakpoints.$xxlarge) {
    width: calc(100% - 120px);
    justify-content: center;
    align-items: flex-start;
    flex-shrink: 0;

    // Handle rtl languages
    border-start-start-radius: var(--px-border-radius-xlarge);
    border-start-end-radius: var(--px-border-radius-none);
    border-end-end-radius: var(--px-border-radius-none);
    border-end-start-radius: var(--px-border-radius-none);

    padding: fixed.$spacing-8 fixed.$spacing-8 0px fixed.$spacing-8;
  }
}

.contentAndFooterContainer {
  // Not from Figma
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
  max-width: 1320px;
  height: 100%;

  @media (breakpoints.$xsmall) {
    padding-top: fixed.$spacing-4;
  }

  @media (breakpoints.$small) {
    padding-top: fixed.$spacing-8;
  }

  @media (breakpoints.$medium) {
    padding-top: fixed.$spacing-11;
  }

  // large, xlarge and xxlarge
  @media (breakpoints.$large) or (breakpoints.$xlarge) or (breakpoints.$xxlarge) {
    padding-bottom: fixed.$spacing-8;
    overflow-y: auto;
    gap: fixed.$spacing-8;
  }

  &.expanded {
    max-width: 100%;
  }
}
