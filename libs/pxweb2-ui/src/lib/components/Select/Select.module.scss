@use '../../../../style-dictionary/dist/scss/fixed-variables.scss' as fixed;

// ----------------------------------------------------
// --- CSS classes for the default Select component ---
// ----------------------------------------------------

.select {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: fixed.$spacing-1;
}

.labelWrapper {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  align-self: stretch;
}

.contentStyle {
  display: flex;
  height: 48px;
  padding: fixed.$spacing-2 fixed.$spacing-3;
  align-items: center;
  gap: fixed.$spacing-2;
  align-self: stretch;

  border-radius: var(--px-border-radius-small);
  outline: 2px solid var(--px-color-border-default);
  background: var(--px-color-surface-default);

  &:hover {
    border-radius: var(--px-border-radius-small);
    outline: 2px solid var(--px-color-border-hover);
    background: var(--px-color-surface-default);
    cursor: pointer;
  }

  &:active {
    border-radius: var(--px-border-radius-small);
    outline: 2px solid var(--px-color-border-action);
    background: var(--px-color-surface-default);
  }

  &:focus-visible {
    outline: 3px solid var(--px-color-border-focus-outline);
    outline-offset: 3px;
    box-shadow: inset 0 0 0 3px var(--px-color-border-focus-boxshadow);
  }
}

.optionLayout {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  flex: 1 0 0;
}

.optionTypography {
  overflow: hidden;
  color: var(--px-color-text-default);
  text-overflow: ellipsis;
}

.visuallyHidden {
  display: none;
}

// --------------------------------------------------------
// --- CSS classes for the Variabelbox Select component ---
// --------------------------------------------------------

.selectVariabelbox {
  display: flex;
  padding: fixed.$spacing-2 fixed.$spacing-3;
  align-items: center;
  gap: fixed.$spacing-2;
  background: var(--px-color-surface-default);
  border-radius: var(--px-border-radius-medium) var(--px-border-radius-medium)
    var(--px-border-radius-none) var(--px-border-radius-none);

  &:hover {
    border-radius: var(--px-border-radius-medium);
    outline: 2px solid var(--px-color-border-action);
    cursor: pointer;
  }

  &:active {
    border-radius: var(--px-border-radius-medium);
    outline: 2px solid var(--px-color-border-selected);
  }

  &:focus-visible {
    outline: 3px solid var(--px-color-border-focus-outline);
    outline-offset: 3px;
    box-shadow: inset 0 0 0 3px var(--px-color-border-focus-boxshadow);
    z-index: 999;
    position: relative; 
  }

  &:hover ~ .divider,
  &:active ~ .divider,
  &:focus ~ .divider {
    border-bottom: 2px solid var(--px-color-surface-default);
  }
}

.divider {
  border-bottom: 2px solid var(--px-color-border-subtle);
}

.textWrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: var(--px-border_width-default);
  flex: 1 0 0;
}

.optionLayoutVariablebox {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  align-self: stretch;
}

.modalRadioList {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  align-self: stretch;
  border-radius: var(--px-border-radius-xlarge);
}

.modalRadio {
  display: flex;
  padding: 10px 28px;
  align-items: flex-start;
  gap: 12px;
  align-self: stretch;
  border-radius: var(--px-border-radius-small);
}
