@use '$ui/style-dictionary/dist/scss/fixed-variables.scss' as fixed;

.extra1
{
  display: flex;
  flex-direction: row;
  //width: 100vw;
}

.mainContainer {
  display: flex;
  //width: calc(100% - 120px); // Micke extra
  background: var(--px-color-surface-subtle);
  // position: fixed;
  // left: 120px;
  // overflow: auto;
  
  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-xsmall-max-width) {
    left: 0px;
    background: var(--px-color-surface-default);
    width: 100%;  
  }

  @media (min-width: fixed.$breakpoints-small-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    left: 0px;
    background: var(--px-color-surface-default);
    width: 100%;
  }

  @media (min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-medium-max-width) {
    width: calc(100% - 120px);
    height: calc(100vh - 88px);
    justify-content: center;
    align-items: flex-start;
    flex-shrink: 0;
    border-radius: var(--px-border-radius-xlarge) var(--px-border-radius-none) var(--px-border-radius-none) var(--px-border-radius-none);
    padding: fixed.$spacing-6 fixed.$spacing-6 fixed.$spacing-6 fixed.$spacing-6;
    gap: fixed.$spacing-6;
  }

  @media (min-width: fixed.$breakpoints-large-min-width) and (max-width: fixed.$breakpoints-large-max-width) {
    width: calc(100% - 120px);
    height: calc(100vh - 88px);
    justify-content: center;
    align-items: flex-start;
    flex-shrink: 0;
    border-radius: var(--px-border-radius-xlarge) var(--px-border-radius-none) var(--px-border-radius-none) var(--px-border-radius-none);
    padding: fixed.$spacing-6 fixed.$spacing-6 fixed.$spacing-6 fixed.$spacing-6;
  }

  @media (min-width: fixed.$breakpoints-xlarge-min-width) {
    width: calc(100% - 120px);
    height: calc(100vh - 88px);
    justify-content: center;
    align-items: flex-start;
    flex-shrink: 0;
    border-radius: var(--px-border-radius-xlarge) var(--px-border-radius-none) var(--px-border-radius-none) var(--px-border-radius-none);
    padding: fixed.$spacing-10 fixed.$spacing-6 fixed.$spacing-6 fixed.$spacing-6;
  }
}

.contentAndFooterContainer {
  display: flex; // Micke extra
  flex-direction: column; // Micke extra
  align-items: flex-start; // Micke extra
  gap: fixed.$spacing-6; // Micke extra
  width: 100%; // Micke extra
  max-width: 1320px; // Micke extra 
  height: 100%; // Micke extra
  overflow-y: auto; // Micke extra



  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-xsmall-max-width) {
    width: 100vw;
  }
  
  @media (min-width: fixed.$breakpoints-small-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    width: 100vw; 
  }
}

.contentContainer {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  border-radius: var(--px-border-radius-xlarge);
  background: var(--px-color-surface-default);
  align-self: stretch;

 
  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-xsmall-max-width) {
    padding: fixed.$spacing-4;
    gap: fixed.$spacing-7;
    border-radius: var(--px-border-radius-none);
  }
  
  @media (min-width: fixed.$breakpoints-small-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    padding: fixed.$spacing-6;
    gap: fixed.$spacing-9;
    border-radius: var(--px-border-radius-none);
  }

  @media (min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-medium-max-width) {
    padding: fixed.$spacing-10;
    gap: fixed.$spacing-10;
  }

  @media (min-width: fixed.$breakpoints-large-min-width) and (max-width: fixed.$breakpoints-large-max-width) {
    max-width: 1320px;
    padding:fixed.$spacing-10 fixed.$spacing-12;
    gap: fixed.$spacing-10;
   }

  @media (min-width: fixed.$breakpoints-xlarge-min-width) {
    max-width: 1320px;
    padding: fixed.$spacing-10 fixed.$spacing-12;
    gap: fixed.$spacing-10;
  }
}


// .mainContainer
// {
//   display: flex;
//   flex-direction: row;
//   height: 100vh;
//   width: 100vw;
//   overflow: hidden;
// }

// // .breakpoints {
// //   height: 50px;
// //   width: 100%;
// // }

// .main {
//   // display: flex;
//   // width: 100%;
//   display: flex;

//   width: 1800px;
//   height: 992px;
//   padding: fixed.$spacing-10 fixed.$spacing-6 0px fixed.$spacing-6;

//   justify-content: center;
//   align-items: flex-start;
//   flex-shrink: 0;

//   @media (min-width: fixed.$breakpoints-xlarge-min-width) {

//     display: flex;
//     width: 1800px;
//     height: 992px;
//     padding: fixed.$spacing-10 fixed.$spacing-6 0px fixed.$spacing-6;
//     justify-content: center;
//     align-items: flex-start;
//     flex-shrink: 0;
//     border-radius: var(--px-border-radius-xlarge) var(--px-border-radius-none) var(--px-border-radius-none) var(--px-border-radius-none);
//     background: var(--px-color-surface-subtle);
//     //background-color: yellow;
//   }
// }

// .desktopNavigation {
//    display: none;
//   @media (min-width: fixed.$breakpoints-medium-min-width) {
//     display: flex;
//   }
// }

// .mobileNavigation {
//   display: none;
//   position: fixed;
//   bottom: 0;
//   @media (max-width: fixed.$breakpoints-small-max-width) {
//     display: block;
//   }
// }

// .variableListContainer {
//   display: flex;
//   flex-direction: column;
//   gap: fixed.$spacing-2;
// }

// // @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-xsmall-max-width) {
// //   .breakpoints {
// //     max-width: 100px;

// //     color: white;
// //     background-color: black;
// //   }
// // }

// // @media (min-width: fixed.$breakpoints-small-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
// //   .breakpoints {
// //     max-width: 200px;
// //     background-color: red;
// //   }
// // }

// // @media (min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-medium-max-width) {
// //   .breakpoints {
// //     max-width: 300px;
// //     background-color: green;
// //   }
// // }

// // @media (min-width: fixed.$breakpoints-large-min-width) and (max-width: fixed.$breakpoints-large-max-width) {
// //   .breakpoints {
// //     max-width: 500px;
// //     background-color: blue;
// //   }
// // }

// // @media (min-width: fixed.$breakpoints-xlarge-min-width) {
// //   .breakpoints {
// //     max-width: 700px;
// //     background-color: yellow;
// //   }
// // }
// // .selectWrapper {
// //   width: 300px;
// // }

.tableContainer {
  container-type: inline-size;
  container-name: tableCont;
  //height: 300px; 
  width: 100%;
  display: flex;
  

  @container tableCont (width > 1px) {
   .tableWrapper {
     width: 100cqw;
     overflow-x: auto;
   }
 }} 

// .tableWrapper {
//   overflow-x: hidden;
//   // max-width: 100%;
//   // min-width: 100%;


// }

// // .scrollable {
// //   height: 100vh;
// //   align-self: stretch;
// //   overflow-y: auto;
// // }
