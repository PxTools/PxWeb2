@use '$ui/style-dictionary/dist/scss/fixed-variables.scss' as fixed;

// Not from Figma
.navigationAndContentContainer {
  display: flex;
  flex-direction: row;
}

.mainContainer {
  display: flex;
  background: var(--px-color-surface-subtle);
  height: calc(100vh - 88px);

  // xsmall and small
  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    left: 0px;
    background: var(--px-color-surface-default);
    width: 100%;
  }

  // medium, large and xlarge
  @media ((min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-large-max-width)) or ((min-width: fixed.$breakpoints-xlarge-min-width)) {
    width: calc(100% - 120px);
    justify-content: center;
    align-items: flex-start;
    flex-shrink: 0;

    // Handle rtl languages
    border-start-start-radius: var(--px-border-radius-xlarge);
    border-start-end-radius: var(--px-border-radius-none);
    border-end-end-radius: var(--px-border-radius-none);
    border-end-start-radius: var(--px-border-radius-none);
    
    padding: fixed.$spacing-6 fixed.$spacing-6 0px fixed.$spacing-6;
  }

  // xlarge
  @media (min-width: fixed.$breakpoints-xlarge-min-width) {
    padding: fixed.$spacing-10 fixed.$spacing-6 0px fixed.$spacing-6;
  }
}

.contentAndFooterContainer {
  // Not from Figma
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: fixed.$spacing-6;
  width: 100%;
  max-width: 1320px;
  height: 100%;
  overflow-y: auto;
  scrollbar-width: thin;

  // xsmall and small
  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    width: 100vw;
  }

  // medium, large and xlarge
  @media ((min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-large-max-width)) or ((min-width: fixed.$breakpoints-xlarge-min-width)) {
    padding-bottom: fixed.$spacing-6;
  }
}

.contentContainer {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  border-radius: var(--px-border-radius-xlarge);
  background: var(--px-color-surface-default);
  align-self: stretch;

  // xsmall 
  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-xsmall-max-width) {
    padding: fixed.$spacing-4;
    gap: fixed.$spacing-7;
    border-radius: var(--px-border-radius-none);
  }

  // small
  @media (min-width: fixed.$breakpoints-small-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    padding: fixed.$spacing-6;
    gap: fixed.$spacing-9;
    border-radius: var(--px-border-radius-none);
  }

  // medium
  @media (min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-medium-max-width) {
    padding: fixed.$spacing-10;
    gap: fixed.$spacing-10;
  }

  // large and xlarge
  @media ((min-width: fixed.$breakpoints-large-min-width) and (max-width: fixed.$breakpoints-large-max-width)) or ((min-width: fixed.$breakpoints-xlarge-min-width)) {
    padding: fixed.$spacing-10 fixed.$spacing-12;
    gap: fixed.$spacing-10;
  }
 
  container-type: inline-size;
  container-name: contentCont;

  @container contentCont (width > 1px) {
    .tableContainer {
      width: 100cqw;
      overflow-x: auto;
      scrollbar-width: thin;
    }
  }
}
