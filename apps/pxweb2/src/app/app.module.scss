@use '$ui/style-dictionary/dist/scss/fixed-variables.scss' as fixed;

// Not from Figma
.navigationAndContentContainer {
  display: flex;
  flex-direction: row;
}

.mainContainer {
  display: flex;
  background: var(--px-color-surface-subtle);

  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-xsmall-max-width) {
    left: 0px;
    background: var(--px-color-surface-default);
    width: 100%;
    height: calc(100vh - 88px);
  }

  @media (min-width: fixed.$breakpoints-small-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    left: 0px;
    background: var(--px-color-surface-default);
    width: 100%;
    height: calc(100vh - 88px);
  }

  @media (min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-medium-max-width) {
    width: calc(100% - 120px);
    height: calc(100vh - 88px);
    justify-content: center;
    align-items: flex-start;
    flex-shrink: 0;
    border-radius: var(--px-border-radius-xlarge) var(--px-border-radius-none)
      var(--px-border-radius-none) var(--px-border-radius-none);
    padding: fixed.$spacing-6 fixed.$spacing-6 0px fixed.$spacing-6;
    gap: fixed.$spacing-6;
  }

  @media (min-width: fixed.$breakpoints-large-min-width) and (max-width: fixed.$breakpoints-large-max-width) {
    width: calc(100% - 120px);
    height: calc(100vh - 88px);
    justify-content: center;
    align-items: flex-start;
    flex-shrink: 0;
    border-radius: var(--px-border-radius-xlarge) var(--px-border-radius-none)
      var(--px-border-radius-none) var(--px-border-radius-none);
    padding: fixed.$spacing-6 fixed.$spacing-6 0px fixed.$spacing-6;
  }

  @media (min-width: fixed.$breakpoints-xlarge-min-width) {
    width: calc(100% - 120px);
    height: calc(100vh - 88px);
    justify-content: center;
    align-items: flex-start;
    flex-shrink: 0;
    border-radius: var(--px-border-radius-xlarge) var(--px-border-radius-none)
      var(--px-border-radius-none) var(--px-border-radius-none);
    padding: fixed.$spacing-10 fixed.$spacing-6 0px fixed.$spacing-6;
  }
}

.contentAndFooterContainer {
  // Not from Figma
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: fixed.$spacing-6;
  width: 100%;
  max-width: 1320px;
  height: 100%;
  overflow-y: auto;
  scrollbar-width: thin;

  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-xsmall-max-width) {
    width: 100vw;
  }

  @media (min-width: fixed.$breakpoints-small-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    width: 100vw;
  }

  @media (min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-large-max-width) {
    padding-bottom: fixed.$spacing-6;
  }

  @media (min-width: fixed.$breakpoints-xlarge-min-width) {
    padding-bottom: fixed.$spacing-6;
  }
}

.contentContainer {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  border-radius: var(--px-border-radius-xlarge);
  background: var(--px-color-surface-default);
  align-self: stretch;

  @media (min-width: fixed.$breakpoints-xsmall-min-width) and (max-width: fixed.$breakpoints-xsmall-max-width) {
    padding: fixed.$spacing-4;
    gap: fixed.$spacing-7;
    border-radius: var(--px-border-radius-none);
  }

  @media (min-width: fixed.$breakpoints-small-min-width) and (max-width: fixed.$breakpoints-small-max-width) {
    padding: fixed.$spacing-6;
    gap: fixed.$spacing-9;
    border-radius: var(--px-border-radius-none);
  }

  @media (min-width: fixed.$breakpoints-medium-min-width) and (max-width: fixed.$breakpoints-medium-max-width) {
    padding: fixed.$spacing-10;
    gap: fixed.$spacing-10;
  }

  @media (min-width: fixed.$breakpoints-large-min-width) and (max-width: fixed.$breakpoints-large-max-width) {
    max-width: 1320px;
    padding: fixed.$spacing-10 fixed.$spacing-12;
    gap: fixed.$spacing-10;
  }

  @media (min-width: fixed.$breakpoints-xlarge-min-width) {
    max-width: 1320px;
    padding: fixed.$spacing-10 fixed.$spacing-12;
    gap: fixed.$spacing-10;
  }

  container-type: inline-size;
  container-name: contentCont;

  @container contentCont (width > 1px) {
    .tableContainer {
      width: 100cqw;
      overflow-x: auto;
      scrollbar-width: thin;
    }
  }
}
